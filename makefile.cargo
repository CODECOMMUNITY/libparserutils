ifeq (androideabi,$(findstring androideabi,$(TARGET)))

CC := $(TARGET)-gcc
AR := $(TARGET)-ar

else

CC ?= gcc
AR ?= ar

endif

ifeq (darwin,$(findstring darwin,$(TARGET)))
    OSTYPE=darwin
endif
ifeq (linux,$(findstring linux,$(TARGET)))
    OSTYPE=linux
endif
ifeq (androideabi,$(findstring androideabi,$(TARGET)))
    OSTYPE=android
endif

C_SRC= \
	src/charset/aliases.c \
	src/charset/codec.c \
	src/charset/codecs/codec_8859.c \
	src/charset/codecs/codec_ascii.c \
	src/charset/codecs/codec_ext8.c \
	src/charset/codecs/codec_utf16.c \
	src/charset/codecs/codec_utf8.c \
	src/charset/encodings/utf16.c \
	src/charset/encodings/utf8.c \
	src/input/filter.c \
	src/input/inputstream.c \
	src/utils/buffer.c \
	src/utils/errors.c \
	src/utils/stack.c \
	src/utils/vector.c \
	$(NULL)

C_OBJS = $(patsubst %.c,$(OUT_DIR)/%.o,$(C_SRC))
CFLAGS += -Isrc -Isrc/charset -Iinclude -fPIC
ifeq ($(OSTYPE),android)
    CFLAGS += -DWITHOUT_ICONV_FILTER
endif

.PHONY: all
all: $(OUT_DIR)/libparserutils.a

src/charset/aliases.inc: build/make-aliases.pl build/Aliases
	perl build/make-aliases.pl

src/charset/aliases.c: src/charset/aliases.inc

$(OUT_DIR)/libparserutils.a: $(C_OBJS) src/charset/aliases.inc
	cp -R include $(OUT_DIR)
	$(AR) rcs $@ $^

$(OUT_DIR)/%.o: %.c
	mkdir -p `dirname $@` && $(CC) $(CFLAGS) -o $@ -c $<
